{"ast":null,"code":"var _jsxFileName = \"/Users/gurharmanjitsingh/Desktop/Try/tic tac toe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Board from \"./Board\";\nimport History from \"./History\";\nimport calculateWinner from \"./calculateWinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n  const [histories, setHistories] = useState([new Array(9).fill(null)]);\n  const [isXturn, setXturn] = useState(false);\n  const [selectedHistoryIndex, setSelectedHistoryIndex] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const handleStateChange = (newBoardState, index) => {\n    newGameState[index] = isXturn ? \"X\" : \"O\";\n    const isWinner = calculateWinner({\n      gameState: newGameState,\n      player: newGameState[index]\n    });\n    if (isWinner) setGameOver(true);\n    setXturn(!isXturn);\n    setGameState(newGameState);\n    const newHistories = [...histories.slice(0, selectedHistoryIndex + 1), newGameState];\n    setHistories([newHistories]);\n    setSelectedHistoryIndex(newHistories.length);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(Board, {\n      baoardState: histories[selectedHistoryIndex],\n      handleStateChange: handleStateChange,\n      isXturn: isXturn,\n      gameOver: gameOver,\n      x: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(History, {\n      histories: histories,\n      onSelectHistory: (selectedHistory, index) => {\n        setSelectedHistoryIndex(index);\n        setXturn(index % 2 === 0 ? false : true);\n        if (gameState !== selectedHistory) setGameOver(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"/NLZRFhZvW6ZOjFCB2z3ijWnNUk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Board","History","calculateWinner","jsxDEV","_jsxDEV","App","_s","histories","setHistories","Array","fill","isXturn","setXturn","selectedHistoryIndex","setSelectedHistoryIndex","gameOver","setGameOver","handleStateChange","newBoardState","index","newGameState","isWinner","gameState","player","setGameState","newHistories","slice","length","className","children","baoardState","x","fileName","_jsxFileName","lineNumber","columnNumber","onSelectHistory","selectedHistory","_c","$RefreshReg$"],"sources":["/Users/gurharmanjitsingh/Desktop/Try/tic tac toe/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport Board from \"./Board\";\nimport History from \"./History\";\nimport calculateWinner from \"./calculateWinner\";\n\nexport const App = () => {\n  const [histories, setHistories] = useState([new Array(9).fill(null)]);\n  const [isXturn, setXturn] = useState(false);\n  const [selectedHistoryIndex, setSelectedHistoryIndex] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const handleStateChange = (newBoardState, index) => {\n    newGameState[index] = isXturn ? \"X\" : \"O\";\n    const isWinner = calculateWinner({\n      gameState: newGameState,\n      player: newGameState[index],\n    });\n    if (isWinner) setGameOver(true);\n    setXturn(!isXturn);\n    setGameState(newGameState);\n    const newHistories = [\n      ...histories.slice(0, selectedHistoryIndex + 1),\n      newGameState,\n    ];\n    setHistories([newHistories]);\n    setSelectedHistoryIndex(newHistories.length);\n  };\n  return (\n    <div className=\"game\">\n      <Board\n        baoardState={histories[selectedHistoryIndex]}\n        handleStateChange={handleStateChange}\n        isXturn={isXturn}\n        gameOver={gameOver}\n        x\n      />\n      <History\n        histories={histories}\n        onSelectHistory={(selectedHistory, index) => {\n          setSelectedHistoryIndex(index);\n          setXturn(index % 2 === 0 ? false : true);\n          if (gameState !== selectedHistory) setGameOver(false);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,OAAO,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,CAAC,IAAIU,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;EACrE,MAAM,CAACC,OAAO,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACc,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACnE,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMkB,iBAAiB,GAAGA,CAACC,aAAa,EAAEC,KAAK,KAAK;IAClDC,YAAY,CAACD,KAAK,CAAC,GAAGR,OAAO,GAAG,GAAG,GAAG,GAAG;IACzC,MAAMU,QAAQ,GAAGnB,eAAe,CAAC;MAC/BoB,SAAS,EAAEF,YAAY;MACvBG,MAAM,EAAEH,YAAY,CAACD,KAAK;IAC5B,CAAC,CAAC;IACF,IAAIE,QAAQ,EAAEL,WAAW,CAAC,IAAI,CAAC;IAC/BJ,QAAQ,CAAC,CAACD,OAAO,CAAC;IAClBa,YAAY,CAACJ,YAAY,CAAC;IAC1B,MAAMK,YAAY,GAAG,CACnB,GAAGlB,SAAS,CAACmB,KAAK,CAAC,CAAC,EAAEb,oBAAoB,GAAG,CAAC,CAAC,EAC/CO,YAAY,CACb;IACDZ,YAAY,CAAC,CAACiB,YAAY,CAAC,CAAC;IAC5BX,uBAAuB,CAACW,YAAY,CAACE,MAAM,CAAC;EAC9C,CAAC;EACD,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBzB,OAAA,CAACJ,KAAK;MACJ8B,WAAW,EAAEvB,SAAS,CAACM,oBAAoB,CAAE;MAC7CI,iBAAiB,EAAEA,iBAAkB;MACrCN,OAAO,EAAEA,OAAQ;MACjBI,QAAQ,EAAEA,QAAS;MACnBgB,CAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACF/B,OAAA,CAACH,OAAO;MACNM,SAAS,EAAEA,SAAU;MACrB6B,eAAe,EAAEA,CAACC,eAAe,EAAElB,KAAK,KAAK;QAC3CL,uBAAuB,CAACK,KAAK,CAAC;QAC9BP,QAAQ,CAACO,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC;QACxC,IAAIG,SAAS,KAAKe,eAAe,EAAErB,WAAW,CAAC,KAAK,CAAC;MACvD;IAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAxCWD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AA0ChB,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}